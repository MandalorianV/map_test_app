# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be 
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    use_build_context_synchronously: false
    always_use_package_imports: true
    avoid_print: true
    avoid_type_to_string: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    discarded_futures: true
    empty_statements: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    always_declare_return_types: true
    always_put_control_body_on_new_line: false
    always_specify_types: true
    avoid_catches_without_on_clauses: true
    avoid_escaping_inner_quotes: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_multiple_declarations_per_line: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_returning_null_for_void: true
    avoid_unnecessary_containers: true
    camel_case_extensions: true
    camel_case_types: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    directives_ordering: true
    empty_catches: true
    file_names: true
    flutter_style_todos: false
    library_prefixes: true
    lines_longer_than_80_chars: true
    missing_whitespace_between_adjacent_strings: true
   # no_default_cases: true It is experimental and Working a little weird
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    non_constant_identifier_names: true
    only_throw_errors: true
    prefer_adjacent_string_concatenation: true
    prefer_const_constructors: true
    prefer_contains: true
    prefer_expression_function_bodies: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_mixin: false
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    public_member_api_docs: false
    require_trailing_commas: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    slash_for_doc_comments: true
    type_annotate_public_apis: true
    unawaited_futures: true
    unnecessary_brace_in_string_interps: true
    unnecessary_lambdas: false
    unnecessary_null_in_if_null_operators: true
    unnecessary_parenthesis: true
    unnecessary_string_interpolations: true
    use_colored_box: true
    use_decorated_box: true
    use_full_hex_values_for_flutter_colors: true
    use_if_null_to_convert_nulls_to_bools: true
    use_string_buffers: true
    use_to_and_as_if_applicable: true
    sort_pub_dependencies: false
   

  #  avoid_dynamic_calls: true
  
    

    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
